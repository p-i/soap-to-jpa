package $package;

import com.google.common.collect.ImmutableMap;
import java.util.Map;
import java.io.Serializable;
import java.lang.reflect.InvocationTargetException;

/**
* GENERATED JPA CONTENT. DO NOT MODIFY!
*
* generated by soap-to-jpa Maven plugin (https://github.com/p-i/soap-to-jpa)
*/
class JPAEntitiesFactoryChunk${chunk} {

    private static final Map<String, Class<? extends Serializable>> mapFactoryInstances = ImmutableMap.<String, Class<? extends Serializable>>builder()
#foreach( $interface in $interfaces.keySet() )
        .put("${interface}", ${interfaces.get($interface)}.class)
#end
        .build();

    /**
     * Creates JPA instance for a given SOAP stub
     */
    static Object create(Object soapStub) throws NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException {
        return mapFactoryInstances.get(soapStub.getClass().getTypeName());
    }
}
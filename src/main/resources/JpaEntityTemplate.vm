package $package;

import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;

/**
 * GENERATED JPA CONTENT. DO NOT MODIFY!
 *
 * generated by soap-to-jpa Maven plugin
 */
@Entity
@Table(name = "${className}")
public class ${className}JPA {

    @Id
    @GeneratedValue
    private Long id;

#*
 The list if private fields
*#
#foreach( $field in $fieldMap.keySet() )
    private ${fieldMap.get($field).getType()}  ${field};
#end

## Generate few constructors for each SOAP types assigned with this JPA
#foreach( $constructor in $constructors )

    /**
     * Constructor, that restores an instance of ${className}JPA
     * from SOAP stub $constructor
     *
     * @param stub - instance of type <code>${constructor}</code>
     */
    public ${className}JPA(${constructor} stub) {
#foreach( $field in $fieldMap.keySet() )
    #if(${fieldMap.get($field).isPrimitive()})
    this.${field} = stub.get${display.capitalize($field)}();
    #else
    this.${field} = new ${fieldMap.get($field).getType()}(stub.get${display.capitalize($field)}());
    #end
#end
}

#end

    /**
     * Get the entity ID
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Id to be set
     */
    public void setId(Long id) {
        this.id = id;
    }

#*
 Getters and setters
*#
    #foreach( $field in $fieldMap.keySet() )

    /**
     * Get the entity ${field}
     */
    public ${fieldMap.get($field).getType()} get${display.capitalize($field)}() {
        return this.${field};
    }

    /**
     * ${field} to be set
     */
    public void set${display.capitalize($field)}(${fieldMap.get($field).getType()} val) {
        this.${field} = val;
    }

    #end

}